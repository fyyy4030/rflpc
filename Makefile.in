# This Makefile can be included in a project to ease the compiling
# 
# You can find a Makefile example in samples/skel

# This includes the makefile that defines compiler tools
include $(RFLPC_DIR)/Makefile.vars

## Compiling variables
CFLAGS=$(shell $(RFLPC_DIR)/rflpc-config --cflags) $(ADD_INCLUDES)
LDFLAGS=$(shell $(RFLPC_DIR)/rflpc-config --libs) $(ADD_LIBS)

## Library configuration

MBED_PATH=$(shell mount | grep MBED | cut -d\  -f3)
# If your mount command is not completly compliant with the linux one, you can try to use awk instead of cut
#MBED_PATH=$(shell mount | grep MBED | awk '{ print $$3 }')
MBED_TTY=$(shell ls /dev/ttyACM*)
ELF=$(OUTPUT_NAME).elf
BIN=$(OUTPUT_NAME).bin

PERIPHERALS_SOURCE=$(foreach peripheral, $(PERIPHERALS), $(wildcard $(RFLPC_DIR)/peripherals/$(peripheral)/*.c))
CFLAGS+=$(foreach peripheral, $(PERIPHERALS), -I$(RFLPC_DIR)/peripherals/$(peripheral))
OBJS+=$(PERIPHERALS_SOURCE:.c=.o)

## Common rules
all:	$(BIN)

$(BIN): $(ELF)
	$(OBJCOPY) -O binary -j .text -j .data $^ $@

$(ELF): $(OBJS)
	$(LD) -o $@ $(OBJS) $(LDFLAGS)

clean:
	$(RM) $(OBJS) *~ rflpc.map

mrproper: clean
	$(RM) $(ELF) $(BIN)

program: $(BIN)
	cp $+ $(MBED_PATH) && sync

reset:
	$(RFLPC_DIR)/tools/send_break $(MBED_TTY)

dump: $(ELF)
	$(OBJDUMP) -sSt $^

$(RFLPC_DIR):
	make -C $(RFLPC_DIR)

.DEFAULT: all
